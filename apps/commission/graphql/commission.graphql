extend type Query {
    commissions(pagination: PageInput, filters: CommissionFilter): CommissionConnection!
}

extend type Mutation {
    updateStatus(pk: ID!, status: CommissionStatus!): Commission!
    addComission(data: CommissionInput!): CommissionPayload!
    addCommissionNote(commission: ID!, contents: String!): CommissionNote
    updateCommissionNote(pk: ID!, contents: String!, isActive: Boolean!): CommissionNote!
}

type CommissionConnection {
    pageInfo: PageInfo!
    objects: [Commission]!
}

type Commission {
    id: ID!
    commission_type: String!
    vc_name: String!
    vehicle: Vehicle
    component: Component
    contractor: Contractor
    saleInvoices: [SaleInvoice]!
    description: String
    status: String!
    start_date: String!
    end_date: String
    sent_sms: Boolean!
    upload: Boolean!
    value: Float!
    items: [CommissionItem]
    notes: [CommissionNote]
}

type CommissionPayload {
    status: Boolean!
    errors: [Error]
    object: Commission
}

input CommissionFilter {
    id: ID
    status: CommissionStatus
    vc_name__icontains: String
    end_date: String
}

enum CommissionStatus {
    OPEN
    READY
    DONE
    CANCELLED
    ON_HOLD
}

enum CommissionType {
    VEHICLE
    COMPONENT
}

type CommissionNote {
    id: ID!
    contents: String!
    created: String!
    last_edited: String!
    is_active: Boolean!
}

type CommissionItem {
    name: String!
    description: String
    quantity: Int!
    price: Float!
    ware: Ware
}

input CommissionItemInput {
    name: String!
    description: String
    quantity: Int!
    price: Float!
}

input CommissionInput {
    commission_type: CommissionType!
    status: CommissionStatus!
    vc_name: String
    vehicle: ID
    component: ID
    contractor: ID
    description: String
    start_date: String!
    end_date: String
    items: [CommissionItemInput]
}
