extend type Query {
    vehicles(pagination: PageInput, filters: VehicleFilter): VehicleConnection!
    decode(code: String!, create: Boolean!): ScannedVehicle
}

extend type Mutation {
    addVehicle(data: VehicleInput!): VehiclePayload!
    updateVehicle(id: ID!, data: VehicleInput!): VehiclePayload!
}

type VehicleConnection {
    pageInfo: PageInfo!
    objects: [Vehicle]!
}

type Vehicle {
    id: ID!
    registration_plate: String!
    vin: String
    brand: String!
    model: String
    engine_volume: Int
    engine_power: Int
    production_year: Int
    commissions: [Commission]
    registration_date: String
    fuel_type: String
    get_fuel_type_display: String
    get_absolute_url: String!
    last_commission: Commission
}

type ScannedVehicle {
    pk: ID
    label: String
    registration_plate: String!
    vin: String!
    brand: String!
    model: String!
    engine_volume: Int!
    engine_power: Int!
    production_year: Int!
    registration_date: String
    fuel_type: String
    url: String!
}

input VehicleFilter {
    id: ID
    registration_plate__icontains: String
}

input VehicleInput {
    registration_plate: String
    vin: String
    brand: String
    model: String
    engine_volume: Int
    engine_power: Int
    production_year: Int
    registration_date: String
    fuel_type: String
}

type VehiclePayload {
    status: Boolean!
    errors: [Error]
    object: Vehicle
}
