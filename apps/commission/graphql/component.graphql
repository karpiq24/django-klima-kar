extend type Query {
    components(pagination: PageInput, filters: ComponentFilter): ComponentConnection!
}

extend type Mutation {
    addComponent(data: ComponentInput!): ComponentPayload!
    updateComponent(id: ID!, data: ComponentInput!): ComponentPayload!
}

type ComponentConnection {
    pageInfo: PageInfo!
    objects: [Component]!
}

type Component {
    id: ID!
    component_type: String!
    get_component_type_display: String!
    model: String
    serial_number: String
    catalog_number: String
    commissions: [Commission]
    get_absolute_url: String!
    last_commission: Commission
}

input ComponentFilter {
    id: ID
    model__icontains: String
    serial_number__icontains: String
    catalog_number__icontains: String
}

input ComponentInput {
    component_type: String
    model: String
    serial_number: String
    catalog_number: String
}

type ComponentPayload {
    status: Boolean!
    errors: [Error]
    object: Component
}
