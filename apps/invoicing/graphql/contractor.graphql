extend type Query {
    contractors(pagination: PageInput, filters: ContractorFilter, search: String): ContractorConnection!
    gusAddress(nip: String!): GusAddress
}

extend type Mutation {
    addContractor(data: ContractorInput!): ContractorPayload!
    updateContractor(id: ID!, data: ContractorInput!): ContractorPayload!
}

type Contractor {
    id: ID!
    name: String!
    nip: String
    nip_prefix: String
    address_1: String
    address_2: String
    city: String
    postal_code: String
    email: String
    bdo_number: String
    phone_1: String
    phone_2: String
    phone_1_formatted: String
    phone_2_formatted: String
    saleInvoices: [SaleInvoice]
    commissions: [Commission]
    vatStatus: VatStatus
}

type ContractorConnection {
    pageInfo: PageInfo!
    objects: [Contractor]!
}

type VatStatus {
    status: Boolean
    url: String
}

type GusAddress {
    name: String
    street_address: String
    postal_code: String
    city: String
}

input ContractorFilter {
    id: ID
    name__icontains: String
}

input ContractorInput {
    name: String!
    nip: String
    nip_prefix: String
    address_1: String
    address_2: String
    city: String
    postal_code: String
    email: String
    bdo_number: String
    phone_1: String
    phone_2: String
}

type ContractorPayload {
    status: Boolean!
    errors: [Error]
    object: Contractor
}
